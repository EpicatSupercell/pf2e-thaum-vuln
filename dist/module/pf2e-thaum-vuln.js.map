{"version":3,"file":"pf2e-thaum-vuln.js","sources":["../../src/module/utils.js","../../src/module/socket.js","../../src/module/config.js","../../src/module/exploit-vulnerability.js"],"sourcesContent":["export const EXPLOIT_VULNERABILITY_ACTION_ID =\r\n  \"Compendium.pf2e.actionspf2e.fodJ3zuwQsYnBbtk\";\r\nexport const MORTAL_WEAKNESS_EFFECT_SOURCEID = \"Item.plf15q5mFglgWG8w\";\r\nexport const MORTAL_WEAKNESS_EFFECT_UUID =\r\n  \"Compendium.pf2e-thaum-vuln.Thaumaturge Effects.N0jy0FFGS7ViTvs9\";\r\nexport const PERSONAL_ANTITHESIS_EFFECT_SOURCEID = \"Item.Ug14iErZQ2h2y7B2\";\r\nexport const PERSONAL_ANTITHESIS_EFFECT_UUID =\r\n  \"Compendium.pf2e-thaum-vuln.Thaumaturge Effects.EGY7Rxcxwv1aEyHL\";\r\nexport const FLAT_FOOTED_EFFECT_UUID =\r\n  \"Compendium.pf2e-thaum-vuln.Thaumaturge Effects.Xuwb7a6jCWkFS0lI\";\r\nexport const MORTAL_WEAKNESS_TARGET_SOURCEID = \"Item.8z4Q1PuKb13GJMPR\";\r\nexport const MORTAL_WEAKNESS_TARGET_UUID =\r\n  \"Compendium.pf2e-thaum-vuln.Thaumaturge Effects.q2TMJ31MwLNJV1jA\";\r\nexport const PERSONAL_ANTITHESIS_TARGET_SOURCEID = \"Item.5QgPHAdpsUHJmCkX\";\r\nexport const PERSONAL_ANTITHESIS_TARGET_UUID =\r\n  \"Compendium.pf2e-thaum-vuln.Thaumaturge Effects.dNpf1EDKJ6fgNL42\";\r\nexport const BREACHED_DEFENSES_SOURCEID =\r\n  \"Compendium.pf2e.feats-srd.5EzJVhiHQvr3v72n\";\r\nexport const BREACHED_DEFENSES_EFFECT_SOURCEID = \"Item.9ZJclirw6zHSkk0n\";\r\nexport const BREACHED_DEFENSES_EFFECT_UUID =\r\n  \"Compendium.pf2e-thaum-vuln.Thaumaturge Effects.FMw5IpJdA6eOgtv1\";\r\nexport const BREACHED_DEFENSES_TARGET_UUID =\r\n  \"Compendium.pf2e-thaum-vuln.Thaumaturge Effects.E38yjK1tdr579dJy\";\r\nexport const BREACHED_DEFENSES_TARGET_SOURCEID = \"Item.aasC0M4NDDjR84UI\";\r\nexport const DIVERSE_LORE_SOURCEID =\r\n  \"Compendium.pf2e.feats-srd.KlqKpeq5OmTRxVHb\";\r\nexport const ADJUSTMENT_TYPES = {\r\n  materials: {\r\n    propLabel: \"materials\",\r\n    data: [\r\n      \"abysium\",\r\n      \"adamantine\",\r\n      \"cold-iron\",\r\n      \"darkwood\",\r\n      \"djezet\",\r\n      \"dragonhide\",\r\n      \"grisantian-pelt\",\r\n      \"inubrix\",\r\n      \"mithral\",\r\n      \"noqual\",\r\n      \"orichalcum\",\r\n      \"peachwood\",\r\n      \"siccatite\",\r\n      \"silver\",\r\n      \"sisterstone-dusk\",\r\n      \"sisterstone-scarlet\",\r\n      \"sovereign-steel\",\r\n      \"warpglass\",\r\n    ],\r\n  },\r\n  traits: {\r\n    propLabel: \"traits\",\r\n    data: [\r\n      \"chaotic\",\r\n      \"evil\",\r\n      \"good\",\r\n      \"lawful\",\r\n      \"air\",\r\n      \"earth\",\r\n      \"fire\",\r\n      \"metal\",\r\n      \"water\",\r\n      \"acid\",\r\n      \"cold\",\r\n      \"electricity\",\r\n      \"fire\",\r\n      \"force\",\r\n      \"negative\",\r\n      \"positive\",\r\n      \"sonic\",\r\n    ],\r\n  },\r\n  \"weapon-traits\": {\r\n    propLabel: \"weapon-traits\",\r\n    data: [\"magical\"],\r\n  },\r\n};\r\n\r\nimport { createEffectOnActor } from \"./exploit-vulnerability.js\";\r\n\r\n//Gets the effects of Personal Antithesis or Mortal Weakness from the character\r\nexport function getActorEVEffect(a, targetID) {\r\n  if (targetID === undefined) {\r\n    return a.items.find(\r\n      (item) =>\r\n        item.getFlag(\"core\", \"sourceId\") ===\r\n          PERSONAL_ANTITHESIS_EFFECT_SOURCEID ||\r\n        item.getFlag(\"core\", \"sourceId\") === MORTAL_WEAKNESS_EFFECT_SOURCEID ||\r\n        item.getFlag(\"core\", \"sourceId\") ===\r\n          PERSONAL_ANTITHESIS_TARGET_SOURCEID ||\r\n        item.getFlag(\"core\", \"sourceId\") === MORTAL_WEAKNESS_TARGET_SOURCEID ||\r\n        item.getFlag(\"core\", \"sourceId\") ===\r\n          BREACHED_DEFENSES_EFFECT_SOURCEID ||\r\n        item.getFlag(\"core\", \"sourceId\") === BREACHED_DEFENSES_TARGET_SOURCEID\r\n    );\r\n  } else if (targetID === \"*\") {\r\n    let effects = new Array();\r\n    for (let item of a.items) {\r\n      if (\r\n        item?.sourceId === PERSONAL_ANTITHESIS_TARGET_SOURCEID ||\r\n        item?.sourceId === MORTAL_WEAKNESS_TARGET_SOURCEID ||\r\n        item?.sourceId === BREACHED_DEFENSES_TARGET_SOURCEID\r\n      ) {\r\n        effects.push(item);\r\n      }\r\n    }\r\n    return effects;\r\n  } else {\r\n    return a.items.find(\r\n      (item) =>\r\n        (item.getFlag(\"core\", \"sourceId\") ===\r\n          PERSONAL_ANTITHESIS_TARGET_SOURCEID &&\r\n          item?.rules[1]?.option ===\r\n            \"origin:id:\" + targetID.split(\".\").join(\"\")) ||\r\n        (item.getFlag(\"core\", \"sourceId\") === MORTAL_WEAKNESS_TARGET_SOURCEID &&\r\n          item?.rules[1]?.option ===\r\n            \"origin:id:\" + targetID.split(\".\").join(\"\")) ||\r\n        (item.getFlag(\"core\", \"sourceId\") ===\r\n          BREACHED_DEFENSES_TARGET_SOURCEID &&\r\n          item?.rules.find(\r\n            (rules) =>\r\n              rules.key === \"RollOption\" &&\r\n              rules.option === \"origin:id:\" + targetID.split(\".\").join(\"\")\r\n          ))\r\n    );\r\n  }\r\n}\r\n\r\n//Gets and returns the highest IWR value from an array that is passed in\r\nexport function getGreatestIWR(iwr) {\r\n  if (iwr) {\r\n    let gIWR = iwr[0];\r\n    for (const n of iwr) {\r\n      if (n.value >= gIWR.value) {\r\n        gIWR = n;\r\n      }\r\n    }\r\n    return gIWR;\r\n  }\r\n}\r\n\r\n//gets and returns the greatest bypassable resistance\r\nexport function BDGreatestBypassableResistance(t) {\r\n  const r = getIWR(t).resistances;\r\n  if (r) {\r\n    let bypassResists = new Array();\r\n    for (let resist of r) {\r\n      if (resist.exceptions.length != 0) {\r\n        bypassResists.push(resist);\r\n      }\r\n    }\r\n    if (bypassResists.length != 0) {\r\n      let gBD = bypassResists[0];\r\n      for (let resist of bypassResists) {\r\n        if (resist.value >= gBD.value) {\r\n          gBD = resist;\r\n        }\r\n      }\r\n      return gBD;\r\n    }\r\n  }\r\n}\r\n\r\n//gets and returns the IWR information from from the selected token or actor\r\nexport function getIWR(a) {\r\n  if (a.actor) {\r\n    a = a.actor;\r\n  }\r\n  const iwr = (() => {\r\n    return {\r\n      resistances: a.attributes?.resistances,\r\n      weaknesses: a.attributes?.weaknesses,\r\n      immunities: a.attributes?.immunities,\r\n    };\r\n  })();\r\n  return iwr;\r\n}\r\n\r\n//Creates the dialog box when a success or crit success on Esoteric Lore is rolled\r\nexport async function createEVDialog(\r\n  sa,\r\n  t,\r\n  paEffectSource,\r\n  mwEffectSource,\r\n  rollDOS\r\n) {\r\n  const paDmg = 2 + Math.floor(sa.level / 2);\r\n  const iwrContent = createIWRContent(rollDOS, t);\r\n  let dgContent =\r\n    \"<p>Choose the vulnerability to exploit.</p><br>\" +\r\n    iwrContent +\r\n    `<p>Personal Antithesis Bonus Damage: ${paDmg}</p>`;\r\n  let dgBtns = {\r\n    pa: {\r\n      label: \"Personal Antithesis\",\r\n      callback: () => {\r\n        createEffectOnActor(sa, t, paEffectSource);\r\n      },\r\n    },\r\n    mw: {\r\n      label: \"Mortal Weakness\",\r\n      callback: () => {\r\n        createEffectOnActor(sa, t, mwEffectSource);\r\n      },\r\n    },\r\n  };\r\n  if (\r\n    sa.items.find(\r\n      (item) => item.getFlag(\"core\", \"sourceId\") === BREACHED_DEFENSES_SOURCEID\r\n    ) &&\r\n    (rollDOS === 2 || rollDOS === 3)\r\n  ) {\r\n    let bdEffectSource = await fromUuid(BREACHED_DEFENSES_EFFECT_UUID);\r\n    const tRes = getIWR(t).resistances;\r\n    let gBD;\r\n    if (tRes.length != 0) {\r\n      gBD =\r\n        BDGreatestBypassableResistance(t)?.type +\r\n        \", bypassed by \" +\r\n        BDGreatestBypassableResistance(t)?.exceptions;\r\n    } else {\r\n      gBD = \"none\";\r\n    }\r\n\r\n    dgContent = dgContent + \"<p>Highest Bypassable Resistance: \" + gBD + \"<p>\";\r\n    dgBtns = {\r\n      ...dgBtns,\r\n      bd: {\r\n        label: \"Breached Defenses\",\r\n        callback: () => {\r\n          createEffectOnActor(sa, t, bdEffectSource);\r\n        },\r\n      },\r\n    };\r\n  }\r\n  let dg = new Dialog({\r\n    title: \"Exploit Vulnerability\",\r\n    content: () => dgContent,\r\n    buttons: dgBtns,\r\n    default: \"pa\",\r\n    render: () => {},\r\n    close: () => {},\r\n  });\r\n\r\n  return dg;\r\n}\r\n\r\n//Creates the IWR content box content\r\nexport function createIWRContent(rollDOS, a) {\r\n  let iwrContent;\r\n  const iwrData = getIWR(a);\r\n  if (rollDOS === 2) {\r\n    let weakness =\r\n      iwrData.weaknesses.length == 0\r\n        ? \"None\"\r\n        : `${getGreatestIWR(iwrData.weaknesses)?.type} - ${\r\n            getGreatestIWR(iwrData.weaknesses)?.value\r\n          }`;\r\n    iwrContent = `<p>Highest Weakness: ${weakness}</p>`;\r\n  }\r\n  if (rollDOS === 3) {\r\n    let weakness =\r\n      iwrData.weaknesses.length == 0 ? \"None\" : stitchIWR(iwrData.weaknesses);\r\n    let resist =\r\n      iwrData.resistances.length == 0 ? \"None\" : stitchIWR(iwrData.resistances);\r\n    let immune =\r\n      iwrData.immunities.length == 0 ? \"None\" : stitchIWR(iwrData.immunities);\r\n    iwrContent = `<div class=\"grid-container\"><div class=\"grid-item\"><p>Weaknesses: <ul>${weakness}</ul></p></div><div class=\"grid-item\"><p>Resistances: <ul>${resist}</ul></p></div><div class=\"grid-item\"><p>Immunities: <ul>${immune}</ul></p></div></div>`;\r\n  }\r\n  return iwrContent;\r\n}\r\n\r\n//stitches together the IWR information to help create the content for the dialog box\r\nexport function stitchIWR(p) {\r\n  let s = \"\";\r\n  for (const n of p) {\r\n    if (n.value) {\r\n      s = s + `<li>${n.type} - ${n.value}</li>`;\r\n      if (n.exceptions.length != 0) {\r\n        s = s + \"Except: \";\r\n        for (const e of n.exceptions) {\r\n          if (e === n.exceptions[n.exceptions.length - 1]) {\r\n            s = s + `${e}`;\r\n          } else {\r\n            s = s + `${e}, `;\r\n          }\r\n        }\r\n        s = s + \"<br>\";\r\n      }\r\n      if (n.doubleVs == \"\") {\r\n        n.doubleVs = false;\r\n      }\r\n      if (n.doubleVs) {\r\n        s = s + \"Double vs.: \";\r\n        for (const d of n.doubleVs) {\r\n          if (d === n.doubleVs[n.doubleVs.length - 1]) {\r\n            s = s + `${d}`;\r\n          } else {\r\n            s = s + `${d}, `;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      s = s + `<li>${n.type}</li>`;\r\n      if (n.exceptions.length != 0) {\r\n        s = s + \"Except: \";\r\n        for (const e of n.exceptions) {\r\n          if (e === n.exceptions[n.exceptions.length - 1]) {\r\n            s = s + `${e}`;\r\n          } else {\r\n            s = s + `${e}, `;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return s;\r\n}\r\n","import {\r\n  MORTAL_WEAKNESS_TARGET_UUID,\r\n  PERSONAL_ANTITHESIS_TARGET_UUID,\r\n  MORTAL_WEAKNESS_EFFECT_SOURCEID,\r\n  PERSONAL_ANTITHESIS_EFFECT_SOURCEID,\r\n  BREACHED_DEFENSES_TARGET_UUID,\r\n  BREACHED_DEFENSES_EFFECT_SOURCEID,\r\n} from \"./utils.js\";\r\n\r\nimport { getActorEVEffect, getGreatestIWR, getIWR } from \"./utils.js\";\r\n\r\nlet socket;\r\n\r\nHooks.once(\"socketlib.ready\", () => {\r\n  socket = socketlib.registerModule(\"pf2e-thaum-vuln\");\r\n  socket.register(\"createEffectOnTarget\", _socketCreateEffectOnTarget);\r\n  socket.register(\"updateEVEffect\", _socketUpdateEVEffect);\r\n  socket.register(\"deleteEVEffect\", _socketDeleteEVEffect);\r\n  socket.register(\"createSecretMessage\", _socketCreateSecretMessage);\r\n});\r\n\r\nexport function createSecretMessage(message) {\r\n  return socket.executeAsGM(_socketCreateSecretMessage, message);\r\n}\r\n\r\nexport function createEffectOnTarget(a, t, effect, evTargets) {\r\n  let aID = a.uuid;\r\n  let tID = t.actor.uuid;\r\n  let eID = effect.uuid;\r\n  return socket.executeAsGM(\r\n    _socketCreateEffectOnTarget,\r\n    aID,\r\n    tID,\r\n    eID,\r\n    evTargets\r\n  );\r\n}\r\n\r\nexport function updateEVEffect(a) {\r\n  return socket.executeAsGM(_socketUpdateEVEffect, a);\r\n}\r\n\r\nexport function deleteEVEffect(a, sa = undefined) {\r\n  let targ = new Array();\r\n  if (sa === undefined) {\r\n    for (let tg of a) {\r\n      if (tg.actor) {\r\n        if (getActorEVEffect(tg.actor)) {\r\n          targ.push(tg.actor.uuid);\r\n        }\r\n      } else {\r\n        if (getActorEVEffect(tg)) {\r\n          targ.push(tg.uuid);\r\n        }\r\n      }\r\n    }\r\n    return socket.executeAsGM(_socketDeleteEVEffect, targ);\r\n  } else {\r\n    let actorID = sa.uuid;\r\n    let effect;\r\n    for (let tg of a) {\r\n      if (tg?.actor) {\r\n        if (getActorEVEffect(tg.actor)) {\r\n          effect = getActorEVEffect(tg.actor);\r\n          if (\r\n            effect.system?.rules\r\n              .find((rules) => rules.key === \"RollOption\")\r\n              ?.option?.split(\":\")[2] === actorID\r\n          ) {\r\n            targ.push(tg.actor.uuid);\r\n          } else if (tg.actor === sa) {\r\n            targ.push(tg.actor.uuid);\r\n          }\r\n        }\r\n      } else {\r\n        if (getActorEVEffect(tg)) {\r\n          if (tg.uuid != actorID) {\r\n            effect = getActorEVEffect(tg);\r\n            if (\r\n              effect.system.rules\r\n                .find((rules) => rules.key === \"RollOption\")\r\n                .option.split(\":\")[2] === actorID\r\n            ) {\r\n              targ.push(tg.uuid);\r\n            }\r\n          } else {\r\n            targ.push(actorID);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return socket.executeAsGM(_socketDeleteEVEffect, targ, actorID);\r\n  }\r\n}\r\n\r\nasync function _socketCreateEffectOnTarget(aID, tID, eID, evTargets) {\r\n  const a = await fromUuid(aID);\r\n  const t = await fromUuid(tID);\r\n  const e = await fromUuid(eID);\r\n\r\n  let eff = e.toObject();\r\n\r\n  const m = await fromUuid(MORTAL_WEAKNESS_TARGET_UUID);\r\n  const p = await fromUuid(PERSONAL_ANTITHESIS_TARGET_UUID);\r\n  const b = await fromUuid(BREACHED_DEFENSES_TARGET_UUID);\r\n\r\n  const iwrData = getIWR(t);\r\n\r\n  if (eff.flags.core.sourceId === MORTAL_WEAKNESS_EFFECT_SOURCEID) {\r\n    eff = m.toObject();\r\n    if (iwrData.weaknesses.length != 0) {\r\n      eff.system.rules[0].value = getGreatestIWR(iwrData.weaknesses)?.value;\r\n    }\r\n    a.setFlag(\"pf2e-thaum-vuln\", \"EVValue\", `${eff.system.rules[0].value}`);\r\n  } else if (eff.flags.core.sourceId === PERSONAL_ANTITHESIS_EFFECT_SOURCEID) {\r\n    eff = p.toObject();\r\n    eff.system.rules[0].value = Math.floor(a.level / 2) + 2;\r\n    a.setFlag(\"pf2e-thaum-vuln\", \"EVValue\", `${eff.system.rules[0].value}`);\r\n  } else if (eff.flags.core.sourceId === BREACHED_DEFENSES_EFFECT_SOURCEID) {\r\n    eff = b.toObject();\r\n    a.setFlag(\r\n      \"pf2e-thaum-vuln\",\r\n      \"EVValue\",\r\n      `${\r\n        e.system.rules.find(\r\n          (rules) => rules.slug === \"breached-defenses-bypass\"\r\n        ).value\r\n      }`\r\n    );\r\n  }\r\n  if (eff.system?.rules[0]?.value) {\r\n    a.setFlag(\"pf2e-thaum-vuln\", \"EVValue\", `${eff.system.rules[0].value}`);\r\n  }\r\n  eff.system.rules.find(\r\n    (rules) => rules.key === \"RollOption\"\r\n  ).option = `origin:id:${a.uuid}`;\r\n\r\n  eff.name = eff.name + ` (${a.name})`;\r\n  for (let targ of evTargets) {\r\n    const tg = await fromUuid(targ);\r\n    tg.actor.createEmbeddedDocuments(\"Item\", [eff]);\r\n  }\r\n  return;\r\n}\r\n\r\n//This is a temporary fix until a later pf2e system update. The function hooks on renderChatMessage attack-rolls\r\n//If the thaumaturge makes an attack-roll, the target's weakness updates with the correct amount\r\n//If it's not the thaumaturge that makes the attack-roll, it changes the weakness to 0\r\nasync function _socketUpdateEVEffect(a) {\r\n  let sa = await fromUuid(`Actor.${a}`);\r\n  let updates;\r\n  let tKey;\r\n  let value;\r\n  let origin;\r\n  let rollOptionData;\r\n  if (!(sa.getFlag(\"pf2e-thaum-vuln\", \"EVMode\") === \"breached-defenses\")) {\r\n    for (let act of canvas.tokens.placeables) {\r\n      if (act.actor.uuid != a.uuid) {\r\n        for (let effect of getActorEVEffect(act.actor, \"*\")) {\r\n          if (\r\n            effect?.rules[1]?.option.split(\":\")[2] != `Actor${a}` &&\r\n            effect?.rules[1]?.option\r\n          ) {\r\n            value = 0;\r\n          } else if (effect?.rules[1]?.option) {\r\n            let acts = effect.rules[1].option.split(\":\")[2];\r\n            acts = acts.replace(\"Actor\", \"Actor.\");\r\n            origin = await fromUuid(acts);\r\n            value = origin.getFlag(\"pf2e-thaum-vuln\", \"EVValue\");\r\n          }\r\n          tKey = effect._id;\r\n          rollOptionData = effect.rules[1]?.option.replace(\"Actor\", \"Actor.\");\r\n          updates = {\r\n            _id: tKey,\r\n            system: {\r\n              rules: [\r\n                {\r\n                  key: \"Weakness\",\r\n                  type: \"physical\",\r\n                  value: value,\r\n                  predicate: [\"\"],\r\n                },\r\n                {\r\n                  key: \"RollOption\",\r\n                  domain: \"damage-roll\",\r\n                  option: rollOptionData,\r\n                },\r\n              ],\r\n            },\r\n          };\r\n          await act.actor.updateEmbeddedDocuments(\"Item\", [updates]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//Deletes the effect from the actor passed to the method\r\nasync function _socketDeleteEVEffect(targ, actorID) {\r\n  let eff;\r\n  if (actorID === undefined) {\r\n    for (let act of targ) {\r\n      let a = await fromUuid(act);\r\n      if (a.actor) {\r\n        eff = getActorEVEffect(a.actor);\r\n      } else {\r\n        eff = getActorEVEffect(a);\r\n      }\r\n      eff.delete();\r\n    }\r\n  } else {\r\n    for (let act of targ) {\r\n      let a = await fromUuid(act);\r\n      if (a.uuid != actorID) {\r\n        if (a.actor) {\r\n          eff = getActorEVEffect(a.actor, actorID);\r\n        } else {\r\n          eff = getActorEVEffect(a, actorID);\r\n        }\r\n      } else {\r\n        eff = getActorEVEffect(a, undefined);\r\n      }\r\n      eff.delete();\r\n    }\r\n  }\r\n}\r\n\r\nasync function _socketCreateSecretMessage(message) {\r\n  await ChatMessage.create(message);\r\n}\r\n","import { exploitVuln, forceEVTarget } from \"./exploit-vulnerability.js\";\n\nHooks.on(\"init\", () => {\n  game.pf2eThaumVuln = {\n    exploitVuln,\n    forceEVTarget,\n  };\n});\n","import {\r\n  EXPLOIT_VULNERABILITY_ACTION_ID,\r\n  MORTAL_WEAKNESS_EFFECT_SOURCEID,\r\n  MORTAL_WEAKNESS_EFFECT_UUID,\r\n  PERSONAL_ANTITHESIS_EFFECT_SOURCEID,\r\n  PERSONAL_ANTITHESIS_EFFECT_UUID,\r\n  FLAT_FOOTED_EFFECT_UUID,\r\n  MORTAL_WEAKNESS_TARGET_UUID,\r\n  PERSONAL_ANTITHESIS_TARGET_UUID,\r\n  BREACHED_DEFENSES_EFFECT_SOURCEID,\r\n  ADJUSTMENT_TYPES,\r\n  getActorEVEffect,\r\n  createEVDialog,\r\n  BDGreatestBypassableResistance,\r\n  getIWR,\r\n} from \"./utils.js\";\r\nimport {\r\n  createEffectOnTarget,\r\n  updateEVEffect,\r\n  deleteEVEffect,\r\n} from \"./socket.js\";\r\nimport \"./config.js\";\r\n\r\n//Creates the passed effect document on the actor\r\nexport async function createEffectOnActor(sa, t, effect) {\r\n  let eff = effect.toObject();\r\n  let creatureType;\r\n  let evMode;\r\n  let effSlug;\r\n  let effPredicate;\r\n  let evTargets = new Array();\r\n  if (eff.flags.core.sourceId === MORTAL_WEAKNESS_EFFECT_SOURCEID) {\r\n    if (getIWR(t).weaknesses.length === 0) {\r\n      return ui.notifications.warn(\r\n        \"There are no weaknesses on this creature to exploit a Mortal Weakness against.\"\r\n      );\r\n    }\r\n    if (t.actor.system.details.creatureType == \"\") {\r\n      creatureType = \"exploit-vulnerability\";\r\n    } else {\r\n      creatureType = t.actor.system.details.creatureType;\r\n    }\r\n    effPredicate = `target:effect:Mortal Weakness Target ${sa.name}`.slugify();\r\n    effSlug = \"mortal-weakness-effect-magical\";\r\n    evMode = \"mortal-weakness\";\r\n  } else if (eff.flags.core.sourceId === PERSONAL_ANTITHESIS_EFFECT_SOURCEID) {\r\n    effPredicate =\r\n      `target:effect:Personal Antithesis Target ${sa.name}`.slugify();\r\n    effSlug = \"personal-antithesis-effect-magical\";\r\n    evMode = \"personal-antithesis\";\r\n\r\n    //breached defenses logic. It mostly works... there are a few weird cases where it doesn't work such as when the highest\r\n    //resistance that can be bypassed is a combination of two traits (see adamantine golem's resistance bypass from vorpal-adamantine)\r\n    //or if the trait that bypasses it is not in the system/on my list\r\n  } else if (eff.flags.core.sourceId === BREACHED_DEFENSES_EFFECT_SOURCEID) {\r\n    evMode = \"breached-defenses\";\r\n    effPredicate =\r\n      `target:effect:Breached Defenses Target ${sa.name}`.slugify();\r\n    effSlug = \"breached-defenses-bypass\";\r\n    const bypassable = BDGreatestBypassableResistance(t);\r\n    const exception = (() => {\r\n      let property;\r\n      for (const prop in ADJUSTMENT_TYPES) {\r\n        for (const excp of ADJUSTMENT_TYPES[prop].data) {\r\n          if (excp === bypassable.exceptions[0]) {\r\n            property = ADJUSTMENT_TYPES[prop].propLabel;\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        property: property,\r\n        exception: bypassable.exceptions[0],\r\n      };\r\n    })();\r\n    eff.system.rules.find(\r\n      (rules) => rules.slug === \"breached-defenses-bypass\"\r\n    ).value = exception.exception;\r\n    eff.system.rules.find(\r\n      (rules) => rules.slug === \"breached-defenses-bypass\"\r\n    ).property = exception.property;\r\n    eff.system.rules.find(\r\n      (rules) => rules.slug === \"breached-defenses-bypass\"\r\n    ).predicate = `target:effect:Breached Defenses Target ${sa.name}`.slugify();\r\n  }\r\n  eff.system.rules.find((rules) => rules.slug === effSlug).predicate =\r\n    effPredicate;\r\n\r\n  evTargets.push(t.actor.uuid);\r\n\r\n  createEffectOnTarget(sa, t, effect, evTargets);\r\n  await sa.setFlag(\"pf2e-thaum-vuln\", \"activeEV\", true);\r\n  await sa.setFlag(\"pf2e-thaum-vuln\", \"EVTargetID\", evTargets);\r\n  await sa.setFlag(\"pf2e-thaum-vuln\", \"EVTargetType\", `${creatureType}`);\r\n  await sa.setFlag(\"pf2e-thaum-vuln\", \"EVMode\", `${evMode}`);\r\n  await sa.createEmbeddedDocuments(\"Item\", [eff]);\r\n}\r\n\r\nexport async function exploitVuln() {\r\n  //grab the selected token and the targeted token\r\n  const a = canvas.tokens.controlled;\r\n  let ts = Array.from(game.user.targets);\r\n\r\n  //make sure we're only targeting one target and have the thaum selected\r\n  if (a.length != 1 || ts.length != 1) {\r\n    return ui.notifications.warn(\r\n      \"Select one Thaumaturge token and target one creature.\"\r\n    );\r\n  }\r\n\r\n  //set the first index in the array as the target and the first controlled token actor as selected actor\r\n  const t = Array.from(ts)[0];\r\n  const sa = a[0].actor;\r\n\r\n  //check for exploit vulnerability on the actor\r\n  const exploitVulnAction = sa.items.find(\r\n    (item) =>\r\n      item.getFlag(\"core\", \"sourceId\") === EXPLOIT_VULNERABILITY_ACTION_ID\r\n  );\r\n  if (!exploitVulnAction) {\r\n    return ui.notifications.warn(\r\n      `${a[0].actor.name} does not have the ability to Exploit Vulnerability`\r\n    );\r\n  }\r\n\r\n  //deletes Exploit Vulnerability effect if it already exists on the actor\r\n  await deleteEVEffect(canvas.tokens.placeables, sa);\r\n\r\n  // From https://gist.github.com/stwlam/01c2506e93c298b01ad83c182b245144 by somebody, Supe, and stwlam\r\n  const skill = sa.system.skills[\"esoteric-lore\"];\r\n  if (!skill) {\r\n    return ui.notifications.warn(\r\n      `${sa.name} does not have the Esoteric Lore skill`\r\n    );\r\n  }\r\n  const dc = {\r\n    \"-1\": 13,\r\n    ...Object.fromEntries(\r\n      Object.entries([\r\n        14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36,\r\n        38, 39, 40, 42, 44, 46, 48, 50,\r\n      ])\r\n    ),\r\n  }[t.actor.level];\r\n  if (!dc) {\r\n    return ui.notifications.warn(\"No matching DC for target\");\r\n  }\r\n\r\n  const rollOptions = sa.getRollOptions([\"skill-check\", skill.slug]);\r\n\r\n  const outcomes = {\r\n    criticalSuccess:\r\n      \"You remember the creature's weaknesses, and as you empower your esoterica, you have a flash of insight that grants even more knowledge about the creature. You learn all of the creature's resistances, weaknesses, and immunities, including the amounts of the resistances and weaknesses and any unusual weaknesses or vulnerabilities, such as what spells will pass through a golem's antimagic. You can exploit either the creature's mortal weakness or personal antithesis (see below). Your unarmed and weapon Strikes against the creature also become magical if they weren't already.\",\r\n    success:\r\n      \"You recall an important fact about the creature, learning its highest weakness (or one of its highest weaknesses, if it has multiple with the same value) but not its other weaknesses, resistances, or immunities. You can exploit either the creature's mortal weakness or personal antithesis. Your unarmed and weapon Strikes against the creature also become magical if they weren't already.\",\r\n    failure:\r\n      \"Failing to recall a salient weakness about the creature, you instead attempt to exploit a more personal vulnerability. You can exploit only the creature's personal antithesis. Your unarmed and weapon Strikes against the creature also become magical if they weren't already.\",\r\n    criticalFailure:\r\n      \"You couldn't remember the right object to use and become distracted while you rummage through your esoterica. You become flat-footed until the beginning of your next turn.\",\r\n  };\r\n\r\n  const notes = Object.entries(outcomes).map(([outcome, text]) => ({\r\n    title: game.i18n.localize(\"PF2E.Check.Result.Degree.Check.\" + outcome),\r\n    text,\r\n    outcome: [outcome],\r\n  }));\r\n\r\n  const hasDiverseLore = sa.items.some((i) => i.slug === \"diverse-lore\");\r\n  if (hasDiverseLore) {\r\n    // todo: put npc identify data in the document and then show secret text for it.\r\n    const dc = t.actor.system.details.identification?.skill.dc;\r\n    const diverseLoreDC = dc\r\n      ? `<br/><span data-visibility=\"gm\">Recall Knowledge DC ${dc}</span>`\r\n      : \"\";\r\n    notes.push({\r\n      title: \"Diverse Lore\",\r\n      text: `When you succeed at your check to Exploit a Vulnerability, compare the result of your Esoteric Lore check to the DC to Recall Knowledge for that creature; if that number would be a success or a critical success, you gain information as if you had succeeded at the Recall Knowledge check. ${diverseLoreDC}`,\r\n      outcome: [\"success\", \"criticalSuccess\"],\r\n    });\r\n  }\r\n\r\n  const flavor = `Exploit Vulnerability: ${skill.label}`;\r\n  const checkModifier = new game.pf2e.CheckModifier(flavor, skill);\r\n  const traits = [\"esoterica\", \"manipulate\", \"thaumaturge\"];\r\n  const evRoll = await game.pf2e.Check.roll(\r\n    checkModifier,\r\n    {\r\n      actor: sa,\r\n      target: {\r\n        actor: t.actor,\r\n        token: t.document,\r\n      },\r\n      type: \"skill-check\",\r\n      options: rollOptions,\r\n      notes,\r\n      dc: { value: dc },\r\n      traits: traits.map((t) => ({\r\n        name: t,\r\n        label: CONFIG.PF2E.actionTraits[t] ?? t,\r\n        description: CONFIG.PF2E.traitsDescriptions[t],\r\n      })),\r\n      flavor: `\r\n    <strong>Frequency</strong> once per round<br/>\r\n    <strong>Requirements</strong> You are holding your implement<br/>\r\n    <hr/>\r\n    <p>You scour your experiences and learning to identify something that might repel your foe. You retrieve an object from your esoterica with the appropriate supernatural qualities, then use your implement to stoke the remnants of its power into a blaze. Select a creature you can see and attempt an Esoteric Lore check against a standard DC for its level, as you retrieve the right object from your esoterica and use your implement to empower it. You gain the following effects until you Exploit Vulnerabilities again.</p>\r\n  `,\r\n    },\r\n    event\r\n  );\r\n\r\n  const paEffectSource = await fromUuid(PERSONAL_ANTITHESIS_EFFECT_UUID);\r\n  const mwEffectSource = await fromUuid(MORTAL_WEAKNESS_EFFECT_UUID);\r\n  const flatFootedEffect = await fromUuid(FLAT_FOOTED_EFFECT_UUID);\r\n\r\n  let evDialog;\r\n\r\n  //Apply effect based on Degrees of success\r\n  switch (evRoll.degreeOfSuccess) {\r\n    case 0:\r\n      //critical failure. Apply flatfooted condition for one round.\r\n      await sa.createEmbeddedDocuments(\"Item\", [flatFootedEffect.toObject()]);\r\n      break;\r\n    case 1:\r\n      //normal failure. Can only apply personal antithesis.\r\n      await createEffectOnActor(sa, t, paEffectSource);\r\n      break;\r\n    case 2:\r\n      //normal success. Learns highest weakness. Can apply Mortal Weakness or Personal Antithesis\r\n      evDialog = await createEVDialog(sa, t, paEffectSource, mwEffectSource, 2);\r\n      evDialog.render(true);\r\n      break;\r\n    case 3:\r\n      //Critical success. Learns all weaknesses, resistances, and immunities including the amounts and any unusual weaknesses or vulnerabilities\r\n      //Can apply Mortal Weakness or Personal Antithesis.\r\n      evDialog = await createEVDialog(sa, t, paEffectSource, mwEffectSource, 3);\r\n      evDialog.render(true);\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\n//macro that allows GMs to apply the same exploit vulnerability on a target\r\nexport async function forceEVTarget() {\r\n  const m = await fromUuid(MORTAL_WEAKNESS_TARGET_UUID);\r\n  const p = await fromUuid(PERSONAL_ANTITHESIS_TARGET_UUID);\r\n  let eff;\r\n\r\n  let a = canvas.tokens.controlled[0];\r\n  let tar = Array.from(game.user.targets);\r\n  if (canvas.tokens.controlled.length != 1 || tar.length === 0) {\r\n    return ui.notifications.warn(\r\n      \"Select one Thaumaturge token and target one or more creatures\"\r\n    );\r\n  }\r\n  let evM = a.actor.getFlag(\"pf2e-thaum-vuln\", \"EVMode\");\r\n  if (evM === \"mortal-weakness\") {\r\n    eff = m.toObject();\r\n  } else if (evM === \"personal-antithesis\") {\r\n    eff = p.toObject();\r\n  } else {\r\n    return ui.notifications.warn(\r\n      \"Selected token has not activated Exploit Vulnerability\"\r\n    );\r\n  }\r\n  eff.system.rules[0].value = a.actor.getFlag(\"pf2e-thaum-vuln\", \"EVValue\");\r\n  eff.system.rules[1].option = `origin:id:${a.actor.uuid}`;\r\n  eff.name += \" (\" + a.actor.name + \")\";\r\n  for (let targ of tar) {\r\n    if (getActorEVEffect(targ.actor)) {\r\n      await deleteEVEffect([targ.actor]);\r\n    } else {\r\n      await targ.actor.createEmbeddedDocuments(\"Item\", [eff]);\r\n    }\r\n  }\r\n}\r\n\r\n//This is a temporary fix until a later pf2e system update. The function hooks on renderChatMessage attack-rolls\r\n//If the thaumaturge makes an attack-roll, the target's weakness updates with the correct amount\r\n//If it's not the thaumaturge that makes the attack-roll, it changes the weakness to 0\r\nHooks.on(\r\n  \"renderChatMessage\",\r\n  (message) => {\r\n    if (\r\n      message.speaker.actor &&\r\n      message.flags?.pf2e?.context?.type === \"attack-roll\" &&\r\n      canvas.initialized\r\n    ) {\r\n      let a = canvas.tokens.placeables.find(\r\n        (act) => act.actor.id === message.speaker.actor\r\n      ).actor;\r\n      if (a.type === \"character\") {\r\n        updateEVEffect(message.speaker.actor);\r\n      }\r\n    }\r\n  },\r\n  { once: false }\r\n);\r\n"],"names":[],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}