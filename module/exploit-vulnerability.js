export const EXPLOIT_VULNERABILITY_ACTION_ID = "Compendium.pf2e.actionspf2e.fodJ3zuwQsYnBbtk";


export async function exploitVuln() {
	const DCByLevel = [14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 46, 48, 50];
	const skillName = "Esoteric Lore";
	const skillKey = "esoteric-lore";
	const actionSlug = "action:recall-knowledge"
	const actionName = "Recall Knowledge"
	
	//grab the selected token and the targeted token
	const a = canvas.tokens.controlled;
	let ts = Array.from(game.user.targets);
	
	//check for exploit vulnerability on the actor
	const exploitVulnAction = a[0].actor.items.find(item => item.getFlag("core", "sourceId") === EXPLOIT_VULNERABILITY_ACTION_ID);
	if (!exploitVulnAction) {
		return ui.notifications.warn(`${a[0].actor.name} does not have the ability to Exploit Vulnerability`);
	}
	
	//make sure we're only targeting one target and have the thaum selected
	if (a.length != 1 || ts.length != 1){
		return ui.notifications.warn("Select one token and target one creature.")
	}
	
	//set the first index in the array as the target
	const t = Array.from(ts)[0];
	
	//Exploit Vulnerability Effect/action
	await exploitVulnAction.toMessage();
	const modifiers = [];
	let DC = DCByLevel[t.actor.system.details.level.value];
	const notes = [...a[0].actor.system.skills[skillKey].notes];

	const options = a[0].actor.getRollOptions(['all', 'skill-check', skillName.toLowerCase()]);
	options.push(`action:${actionSlug}`);

	game.pf2e.Check.roll(
		new game.pf2e.CheckModifier(
		`<span class="pf2-icon">A</span> <b>${actionName}</b> - <p class="compact-text">${skillName } Skill Check</p>`,
		a[0].actor.system.skills[skillKey], modifiers), {
		actor: a[0].actor,
		type: 'skill-check',
		options,
		notes,
		dc: {
			value: DC
		}
	},
	event
  );
	
}



	